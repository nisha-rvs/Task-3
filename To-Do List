#include <iostream>
#include <vector>
#include <string>

using namespace std;

// Function prototypes
void displayMenu();
void addTask(vector<string> &tasks);
void viewTasks(const vector<string> &tasks);
void deleteTask(vector<string> &tasks);

int main() {
vector<string> tasks;
    char choice;

    do {
        displayMenu();
        cin >> choice;

        switch (choice) {
            case '1':
                addTask(tasks);
                break;
            case '2':
                viewTasks(tasks);
                break;
            case '3':
                deleteTask(tasks);
                break;
            case '4':
                cout << "Exiting program." << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }

    } while (choice != '4');

    return 0;
}

// Function to display the menu
void displayMenu() {
    cout << "\tDisplay Menu:-" << endl;
    cout<< "1. Add Task" << endl;
    cout<< "2. View Tasks" << endl;
    cout<< "3. Delete Task" << endl;
    cout<< "4. Exit\n" << endl;
    cout<< "Enter your choice: \n";
}

// Function to add a task
void addTask(vector<string> &tasks) {
    string task;
    cout << "Enter task: ";
    cin.ignore();
    getline(cin, task);
    tasks.push_back(task);
    cout << "Task added successfully.\n" << endl;
}
 // Function to view all tasks
void viewTasks(const vector<string> &tasks) {
    cout << "      Tasks:-     " << endl;
    for (size_t i = 0; i < tasks.size(); ++i) {
        cout << i + 1 << "  " << tasks[i] << endl;
    }
}

// Function to delete a task
void deleteTask(vector<string> &tasks) {
    int index;
    cout << "Enter the index of the task to delete: ";
    cin >> index;
    if (index >= 1 && index <= tasks.size()) {
        tasks.erase(tasks.begin() + index - 1);
        cout << "Task deleted successfully.\n" << endl;
    } else {
 cout << "Invalid index. Please try again." << endl;
    }
}
